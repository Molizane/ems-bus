{
    "name": "/hackathon/certificado",
	"comment": "Lista as pessoas",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/certificado",
	"type": "GET",
	"APIkey":"true",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=siex;UID=usuextensao;PWD=usuextensao",
		"sql" : "SELECT Aprovado.aextitulo, 
       Aprovado.aextipoacao, 
       dbo.tb_temaatividades.temcodigotemaatividades, 
       dbo.tb_temaatividades.temaexcodigoacaoextensao, 
       dbo.tb_temaatividades.tematividade, 
       dbo.tb_temaatividades.temdescricaoatividade, 
       dbo.tb_temaatividades.temperiododata, 
       dbo.tb_temaatividades.temperiodocarga, 
       dbo.tb_temaatividades.temdatainicio, 
       dbo.tb_temaatividades.temdataterminio, 
       dbo.tb_temaatividades.temcargahorariaatividade, 
       dbo.tb_temaatividades.temmencaominima, 
       dbo.tb_temaatividades.temfrequenciaminima, 
       dbo.tb_temaatividades.temprograma, 
       dbo.tb_temaatividades.temcodigo, 
       dbo.tb_temaatividades.temcodigotema, 
       Aprovado.oexcodigoofertaextensao, 
       Aprovado.oexturma, 
       Aprovado.oalalucodigoalunoextensao, 
       Aprovado.oexapropriado, 
       bdpessoa.dbo.tb_pessoa.pescodigopessoa, 
       bdpessoa.dbo.tb_pessoa.pesnome, 
       Aprovado.oexdataterminorealizacao, 
       Aprovado.oexdatainiciorealizacao, 
       Rtrim(dbo.tb_temaatividades.tematividade) AS Descricao, 
       CASE 
         WHEN Isnull(aexinscricaotemas, 1) = 1 THEN 'Tema:' 
         ELSE 'Programa:' 
       END                                       AS Topico, 
       Aprovado.aexinscricaotemas, 
       ' com duração de ' 
       + Cast(CASE WHEN aexinscricaotemas = 1 THEN Replace(Ltrim(Str( 
       cargahoraria / 60) 
       ), ' ', '0') + ' hora' + CASE WHEN cargahoraria / 60 = 1 THEN '' ELSE 's' 
       END + 
       CASE WHEN cargahoraria % 60 = 0 THEN '' ELSE ' e ' + RIGHT(Replace(Str( 
       cargahoraria % 60), ' ', '0'), 2) + ' minuto' + CASE WHEN cargahoraria % 
       60 = 1 
       THEN '' ELSE 's' END END ELSE Replace(Ltrim(Str(aexcargahorariatotal / 
       100)), 
       ' ', '0') + ' hora' + CASE WHEN aexcargahorariatotal / 100 = 1 THEN '' 
       ELSE 's' 
       END + CASE WHEN aexcargahorariatotal % 100 = 0 THEN '' ELSE ' e ' + RIGHT 
       ( 
       Replace(Str(aexcargahorariatotal % 100), ' ', '0'), 2) + ' minuto' + CASE 
       WHEN 
       aexcargahorariatotal % 100 = 1 THEN '' ELSE 's' END END END + '.' AS 
       VARCHAR(50) 
       )                                         AS CargaHorariaTotal, 
       Certificado.dcedataemissao 
FROM   dbo.tb_temaatividades 
       INNER JOIN (SELECT dbo.tb_acaoextensao.aexcodigoacaoextensao, 
                          dbo.tb_acaoextensao.aextitulo, 
                          dbo.tb_acaoextensao.aexinscricaotemas, 
                          dbo.tb_acaoextensao.aexsituacao, 
                          dbo.tb_acaoextensao.aexpermanente, 
                          dbo.tb_acaoextensao.aexcargahorariatotal, 
                          dbo.tb_acaoextensao.aextipoacao, 
                          dbo.tb_acaoextensao.aexconteudoprogramatico, 
                          dbo.tb_ofertaextensao.oexdataterminorealizacao, 
                          dbo.tb_ofertaextensao.oexdatainiciorealizacao, 
                          dbo.tb_temaatividades.temcodigotemaatividades AS 
                          CodigoTema, 
                          dbo.tb_ofertaextensao.oexcodigoofertaextensao, 
                          dbo.tb_ofertaextensao.oexapropriado, 
                          dbo.tb_ofertaextensao.oexturma, 
                          dbo.tb_ofertaaluno.oalmencao, 
                          dbo.tb_ofertaaluno.oalfrequencia, 
                          dbo.tb_ofertaaluno.oalalucodigoalunoextensao, 
                          qtd.qtdtema, 
                          CH.cargahoraria 
                   FROM   dbo.tb_ofertaaluno 
                          INNER JOIN dbo.tb_ofertaextensao 
                                  ON 
                          dbo.tb_ofertaaluno.oaloexcodigoofertaextensao = 
                          dbo.tb_ofertaextensao.oexcodigoofertaextensao 
                          INNER JOIN dbo.tb_temaatividades 
                                  ON 
                          dbo.tb_ofertaextensao.oextemcodigotemaatividades = 
                          dbo.tb_temaatividades.temcodigotemaatividades 
                          INNER JOIN dbo.tb_acaoextensao 
                                  ON 
                          dbo.tb_temaatividades.temaexcodigoacaoextensao = 
                          dbo.tb_acaoextensao.aexcodigoacaoextensao 
                          INNER JOIN (SELECT temaexcodigoacaoextensao AS 
                                             TemaAcao, 
                                             Count(*)                 AS qtdTema 
                                      FROM   dbo.tb_temaatividades 
                                      GROUP  BY temaexcodigoacaoextensao) AS qtd 
                                  ON qtd.temaacao = 
                                     dbo.tb_acaoextensao.aexcodigoacaoextensao 
                          INNER JOIN (SELECT 
                          dbo.tb_acaoextensao.aexcodigoacaoextensao 
                          AS Acao, 
                          dbo.tb_ofertaaluno.oalalucodigoalunoextensao AS Aluno 
                          , 
                          CASE 
                            WHEN aexinscricaotemas = 1 THEN ( ( 
                            Sum(temcargahorariaatividade / 100) ) * 60 
                                                            ) + ( Sum( 
                            temcargahorariaatividade % 100) ) 
                            ELSE 0 
                          END                                          AS 
                          CargaHoraria 
                                      FROM   dbo.tb_ofertaaluno 
                                             INNER JOIN dbo.tb_ofertaextensao 
                                                     ON 
                          dbo.tb_ofertaaluno.oaloexcodigoofertaextensao = 
                          dbo.tb_ofertaextensao.oexcodigoofertaextensao 
                          INNER JOIN dbo.tb_temaatividades 
                                  ON 
                          dbo.tb_ofertaextensao.oextemcodigotemaatividades = 
                          dbo.tb_temaatividades.temcodigotemaatividades 
                          INNER JOIN dbo.tb_acaoextensao 
                                  ON 
                          dbo.tb_temaatividades.temaexcodigoacaoextensao = 
                          dbo.tb_acaoextensao.aexcodigoacaoextensao 
                                      WHERE  ( Isnull( 
                                     dbo.tb_acaoextensao.aexinscricaotemas, 0) = 
                                               0 
                                               AND ( Isnull( 
                                               dbo.tb_ofertaaluno.oalmencao, 99) 
                                                     >= 
       Isnull(dbo.tb_acaoextensao.aexmencao, 0 
       ) 
       AND Isnull(dbo.tb_ofertaaluno.oalmencao, 99) 
       NOT IN ( 
       6, 8 ) 
       OR Isnull(dbo.tb_acaoextensao.aexmencao, 0) 
       IN ( 15 
       ) ) 
       AND Isnull(dbo.tb_ofertaaluno.oalfrequencia, 99) >= 
       Isnull( 
       dbo.tb_acaoextensao.aexfrequenciaminima, 0) 
       OR Isnull(dbo.tb_acaoextensao.aexinscricaotemas, 1 
       ) = 1 
       AND ( Isnull(dbo.tb_ofertaaluno.oalmencao, 99) 
       >= 
       Isnull( 
       dbo.tb_temaatividades.temmencaominima, 0) 
       AND Isnull(dbo.tb_ofertaaluno.oalmencao, 99) NOT 
       IN ( 6, 8 ) 
       OR Isnull(dbo.tb_acaoextensao.aexmencao, 0) IN ( 
       15 ) ) 
       AND Isnull(dbo.tb_ofertaaluno.oalfrequencia, 99) >= 
       Isnull( 
       dbo.tb_temaatividades.temfrequenciaminima, 0) ) 
       AND ( dbo.tb_ofertaaluno.oalconfirmainscricao = 1 ) 
       GROUP  BY dbo.tb_acaoextensao.aexcodigoacaoextensao, 
       dbo.tb_ofertaaluno.oalalucodigoalunoextensao, 
       dbo.tb_acaoextensao.aexinscricaotemas) AS CH 
       ON CH.acao = dbo.tb_acaoextensao.aexcodigoacaoextensao 
       AND CH.aluno = dbo.tb_ofertaaluno.oalalucodigoalunoextensao 
       WHERE  ( Isnull(dbo.tb_acaoextensao.aexinscricaotemas, 0) = 0 ) 
       AND ( Isnull(dbo.tb_ofertaaluno.oalmencao, 99) >= 
       Isnull(dbo.tb_acaoextensao.aexmencao, 0) 
       AND Isnull(dbo.tb_ofertaaluno.oalmencao, 99) NOT IN ( 6, 8 ) 
       OR Isnull(dbo.tb_acaoextensao.aexmencao, 0) IN ( 15 ) ) 
       AND ( Isnull(dbo.tb_ofertaaluno.oalfrequencia, 99) >= Isnull( 
       dbo.tb_acaoextensao.aexfrequenciaminima, 0) ) 
       OR ( Isnull(dbo.tb_ofertaaluno.oalmencao, 99) >= Isnull( 
       dbo.tb_temaatividades.temmencaominima, 0) 
       AND Isnull(dbo.tb_ofertaaluno.oalmencao, 99) NOT IN ( 6, 8 ) 
       OR Isnull(dbo.tb_acaoextensao.aexmencao, 0) IN ( 15 ) ) 
       AND ( Isnull(dbo.tb_ofertaaluno.oalfrequencia, 99) >= Isnull( 
       dbo.tb_temaatividades.temfrequenciaminima, 0) ) 
       AND ( Isnull(dbo.tb_acaoextensao.aexinscricaotemas, 1) = 1 )) AS Aprovado 
               ON Aprovado.aexcodigoacaoextensao = 
                  dbo.tb_temaatividades.temaexcodigoacaoextensao 
                  AND ( Isnull(Aprovado.aexinscricaotemas, 1) = 0 
                        AND ( Isnull(dbo.tb_temaatividades.temcodigotema, 0) <> 
                              0 
                               OR Aprovado.qtdtema = 1 ) 
                         OR Isnull(Aprovado.aexinscricaotemas, 1) = 1 
                            AND dbo.tb_temaatividades.temcodigotemaatividades = 
                                Aprovado.codigotema ) 
       INNER JOIN dbo.tb_alunoextensao 
               ON Aprovado.oalalucodigoalunoextensao = 
                  dbo.tb_alunoextensao.alucodigoalunoextensao 
       LEFT OUTER JOIN bdpessoa.dbo.tb_pessoa 
                    ON dbo.tb_alunoextensao.alupescodigopessoa = 
                       bdpessoa.dbo.tb_pessoa.pescodigopessoa 
       LEFT OUTER JOIN (SELECT dcealucodigoalunoextensao, 
                               dceaexcodigoacaoextensao, 
                               Max(dcedataemissao) AS DceDataEmissao 
                        FROM   dbo.tb_datacertificado 
                        GROUP  BY dcealucodigoalunoextensao, 
                                  dceaexcodigoacaoextensao) AS Certificado 
                    ON Certificado.dcealucodigoalunoextensao = 
                       Aprovado.oalalucodigoalunoextensao 
                       AND Certificado.dceaexcodigoacaoextensao = 
                           dbo.tb_temaatividades.temaexcodigoacaoextensao 
                       AND Aprovado.aexsituacao IN ( 6, 7, 8, 13, 14 ) ",
		"primary_key" : "TemAexCodigoAcaoExtensao",
		"timeout" : 99999999
	},
	"lang" : "erlang",
	"debug" : false,
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]	
},


{
    "name": "/hackathon/certificado2",
	"comment": "Lista as pessoas",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/certificado2",
	"type": "GET",
	"APIkey":"true",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=siex;UID=usuextensao;PWD=usuextensao",
		"table_name" : "BDExtensao.dbo.vw_CertificadoTemaAluno",
		"primary_key" : "TemAexCodigoAcaoExtensao",
		"timeout" : 99999999
	},
	"lang" : "erlang",
	"debug" : false,
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]	
},


{
    "name": "/hackathon/schema",
	"comment": "Lista os schemas",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/schema",
	"type": "GET",
	"APIkey":"true",
	"datasource" : {
		"type" : "mnesia",
		"table_name" : "catalog_schema"
	},
	"lang" : "erlang",
	"debug" : false,
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]	
},

{
    "name": "/hackathon/pessoa",
	"comment": "Lista as pessoas",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/pessoa",
	"type": "GET",
	"APIkey":"true",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=siger;UID=ususiger;PWD=ususiger",
		"table_name" : "BDPessoa.dbo.TB_Pessoa",
		"primary_key" : "PesCodigoPessoa"
	},
	"lang" : "erlang",
	"debug" : false,
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]	
},

{
    "name": "/hackathon/pessoa/:id",
	"comment": "Lista um pessoa pelo seu id",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find_by_id",
	"url": "/hackathon/pessoa/:id",
	"type": "GET",
	"APIkey":"true",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=siger;UID=ususiger;PWD=ususiger",
		"table_name" : "BDPessoa.dbo.TB_Pessoa",
		"primary_key" : "PesCodigoPessoa"
	},
	"querystring": [
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			}
	],
	"lang" : "erlang",
	"debug" : false
},


{
    "name": "/hackathon/credito/:id",
	"comment": "Lista crédito RU",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:exec_sql",
	"url": "/hackathon/credito/:id",
	"type": "GET",
	"APIkey":"true",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sisru;UID=ususisru;PWD=ususisru",
		"sql" : "SELECT COALESCE(T.ValorVendido, 0) - (COALESCE(T.ValorConsumido, 0) + COALESCE(T.ValorEstornado, 0))
						FROM (SELECT
								 ( 
										 SELECT SUM(VenQuantidade * GrpValor) AS ValorVenda
										 FROM TB_Venda JOIN TB_Grupo ON VenCodigoGrupo = GrpCodigo
										 WHERE VenMatricula = :id
										 AND VenTipoTransacao = 'V'
								  ) AS ValorVendido,
								  (  
										 SELECT SUM(VenQuantidade * GrpValor) AS ValorEstornado 
										 FROM TB_Venda JOIN TB_Grupo ON VenCodigoGrupo = GrpCodigo
										 WHERE VenMatricula = :id
										 AND VenTipoTransacao = 'E'
								 ) AS ValorEstornado,
								 ( 
										 SELECT SUM (GrpValor) as ValorConsumo 
										 FROM TB_Consumo JOIN TB_Grupo ON ConCodigoGrupo = GrpCodigo 
										 WHERE ConMatricula = :id
								 ) AS ValorConsumido 
						) T"
	},
	"lang" : "erlang",
	"debug" : false
},


{
    "name": "/hackathon/cursos",
	"comment": "Lista os cursos ofertados na UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/cursos",
	"type": "GET",
	"APIkey":"true",
	"datasource" : {
		"type" : "csvfile",
		"connection" : "cursos.csv",
		"table_name" : "Tbl_Cursos"
	},
	"lang" : "erlang",
	"debug" : false,
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]	
},

{
    "name": "/hackathon/cursos/:id",
	"comment": "Lista um curso ofertado na UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find_by_id",
	"url": "/hackathon/cursos/:id",
	"type": "GET",
	"APIkey":"true",
	"datasource" : {
		"type" : "csvfile",
		"connection" : "cursos.csv",
		"table_name" : "Tbl_Cursos",
		"primary_key" : "reg"
	},
	"querystring": [
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			}
	],
	"lang" : "erlang",
	"debug" : false
},


{
    "name": "/hackathon/ofertas",
	"comment": "Lista as ofertas de cursos na UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/ofertas",
	"type": "GET",
	"APIkey":"true",
	"datasource" : {
		"type" : "csvfile",
		"connection" : "BuscaListaDeOferta.csv",
		"table_name" : "Tbl_Ofertas"
	},
	"lang" : "erlang",
	"debug" : false,
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Limite inicial do paginador"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Limite final do paginador"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]	
},

{
    "name": "/hackathon/campus",
	"comment": "Lista os campus da UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/campus",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_Campus",
		"primary_key" : "CamCodigo"
	},
	"lang" : "erlang",
	"debug" : false,
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]	
},

{
    "name": "/hackathon/campus/:id",
	"comment": "Lista um campus pelo id",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find_by_id",
	"url": "/hackathon/campus/:id",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_Campus",
		"primary_key" : "CamCodigo"
	},
	"querystring": [
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			}
	],
	"lang" : "erlang"
},

{
    "name": "/hackathon/local",
	"comment": "Lista os locais da UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/local",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_Local",
		"primary_key" : "LocCodigo"
	},
	"lang" : "erlang",
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]		
},

{
    "name": "/hackathon/local/:id",
	"comment": "Lista um local pelo id",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find_by_id",
	"url": "/hackathon/local/:id",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_Local",
		"primary_key" : "LocCodigo"
	},
	"querystring": [
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			}
	],
	"lang" : "erlang"
},

{
    "name": "/hackathon/area_tematica",
	"comment": "Lista as áreas temáticas da UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/area_tematica",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_AreaTematica",
		"primary_key" : "ATeCodigo"
	},
	"lang" : "erlang",
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]		
},

{
    "name": "/hackathon/area_tematica/:id",
	"comment": "Lista a área temática pelo id da UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find_by_id",
	"url": "/hackathon/area_tematica/:id",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_AreaTematica",
		"primary_key" : "ATeCodigo"
	},
	"querystring": [
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			}
	],
	"lang" : "erlang"
},

{
    "name": "/hackathon/mencao",
	"comment": "Lista as menções da UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/mencao",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_Mencao",
		"primary_key" : "MenCodigo"
	},
	"lang" : "erlang",
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]		
},

{
    "name": "/hackathon/mencao/:id",
	"comment": "Lista a menção pelo id",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find_by_id",
	"url": "/hackathon/mencao/:id",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_Mencao",
		"primary_key" : "MenCodigo"
	},
	"querystring": [
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			}
	],
	"lang" : "erlang"
},

{
    "name": "/hackathon/forma_ingresso",
	"comment": "Lista as formas de ingresso da UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/forma_ingresso",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_FormaIngresso",
		"primary_key" : "FinCodigo"
	},
	"lang" : "erlang",
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]		
},

{
    "name": "/hackathon/forma_ingresso/:id",
	"comment": "Lista a forma de ingresso pelo id",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find_by_id",
	"url": "/hackathon/forma_ingresso/:id",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_FormaIngresso",
		"primary_key" : "FinCodigo"
	},
	"querystring": [
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			}
	],
	"lang" : "erlang"
},

{
    "name": "/hackathon/centro_custo",
	"comment": "Lista os centros de custo da UnB",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find",
	"url": "/hackathon/centro_custo",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_OrgaoInterno",
		"primary_key" : "OInCodigo"
	},
	"lang" : "erlang",
	"querystring": [
			{
				"name": "filter",
				"type": "string",
				"default" : "",
				"comment": "Filtro principal da pesquisa"
			},
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			},
			{
				"name": "limit",
				"type": "int",
				"default" : "100",
				"comment": "Quantidade máxima de registros retornados"
			},
			{
				"name": "offset",
				"type": "int",
				"default" : "1",
				"comment": "Offset retornado da consulta"
			},
			{
				"name": "sort",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser ordenados"
			}
		]		
},

{
    "name": "/hackathon/centro_custo/:id",
	"comment": "Lista o centro de custo pelo id",
	"owner": "hackathon",
	"version": "1",
	"service" : "ems_api_query_service:find_by_id",
	"url": "/hackathon/centro_custo/:id",
	"type": "GET",
	"APIkey":"true",
	"async": "false",
	"datasource" : {
		"type" : "sqlserver",
		"connection" : "DSN=sitab;UID=UsuTabelaApoio;PWD=tabelaapoio",
		"table_name" : "TB_OrgaoInterno",
		"primary_key" : "OInCodigo"
	},
	"querystring": [
			{
				"name": "fields",
				"type": "string",
				"default" : "",
				"comment": "Campos que devem ser retornados na pesquisa"
			}
	],
	"lang" : "erlang"
}















