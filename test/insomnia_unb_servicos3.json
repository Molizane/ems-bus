{
  "_type": "export",
  "__export_format": 1,
  "__export_date": "2017-01-23T13:54:10.255Z",
  "__export_source": "insomnia.chrome.app:v2.7.0",
  "items": [
    {
      "_type": "request_group",
      "_id": "grp_1481632553770",
      "name": "aula1",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1481632553770",
          "url": "http://localhost:2301/aula1/pessoa",
          "method": "POST",
          "body": "{\"denominacao\" :  \"Everton de Vargas Agilar\"}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "cadastrar pessoa"
        },
        {
          "_type": "request",
          "_id": "req_1481632861218",
          "url": "http://localhost:2301/aula1/pessoa",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar pessoas"
        },
        {
          "_type": "request",
          "_id": "req_1481633191359",
          "url": "http://localhost:2301/aula1/pessoa/1/credito",
          "method": "GET",
          "body": "",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "consultar crédito"
        },
        {
          "_type": "request",
          "_id": "req_1481632712657",
          "url": "http://localhost:2301/aula1/pessoa/1/credito",
          "method": "POST",
          "body": "{\"valor\" : 10}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Inserir crédito"
        },
        {
          "_type": "request",
          "_id": "req_1483627052185",
          "url": "http://localhost:2301/aula1/curso",
          "method": "POST",
          "body": "{\"denominacao\" :  \"Curso de Java Avançado\"}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "cadastrar curso sem datas de início e fim"
        },
        {
          "_type": "request",
          "_id": "req_1483627104346",
          "url": "http://localhost:2301/aula1/curso",
          "method": "POST",
          "body": "{\"denominacao\" :  \"Curso de Java Avançado\",\n \"dataInicio\" : \"30/02/2017\",\n \"dataFim\" : \"20/03/2017\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "cadastrar curso corretamente"
        },
        {
          "_type": "request",
          "_id": "req_1483627195170",
          "url": "http://localhost:2301/aula1/curso",
          "method": "GET",
          "body": "{\"denominacao\" :  \"Curso de Java Avançado\",\n \"dataInicio\" : \"30/02/2017\",\n \"dataFim\" : \"20/03/2017\",\n \"valor\" : 3850\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os curso disponíveis"
        },
        {
          "_type": "request",
          "_id": "req_1483627162745",
          "url": "http://localhost:2301/unb_aula/curso/4",
          "method": "PUT",
          "body": "{\"denominacao\" :  \"Curso de Java Avançado\",\n \"dataInicio\" : \"30/02/2017\",\n \"dataFim\" : \"20/03/2017\",\n \"valor\" : 3850\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar curso"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1482237576946",
      "name": "services catalog",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1482237576946",
          "url": "http://localhost:2301/catalog",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os serviços"
        },
        {
          "_type": "request",
          "_id": "req_1482237628800",
          "url": "http://localhost:2301/catalog",
          "method": "POST",
          "body": "{\n\t\"name\" : \"/teste/pessoas/:id\",\n\t\"comment\": \"Pessoa\",\n\t\"owner\": \"teste\",\n\t\"version\": \"1.0.0\",\n\t\"service\" : \"br.unb.unb_aula.facade.PessoaFacade:findById\",\n\t\"url\": \"/teste/pessoas/:id\",\n\t\"type\": \"GET\",\n\t\"lang\" : \"java\",\n    \"debug\" : false,\n    \"authentication\" : \"basic\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Incluir serviço"
        },
        {
          "_type": "request",
          "_id": "req_1482251116618",
          "url": "http://localhost:2301/catalog/1",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar um serviço pelo id"
        },
        {
          "_type": "request",
          "_id": "req_1482251151513",
          "url": "http://localhost:2301/catalog/1",
          "method": "DELETE",
          "body": "",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Excluir um serviço pelo id"
        },
        {
          "_type": "request",
          "_id": "req_1482251192051",
          "url": "http://localhost:2301/catalog?filter=\"{\"url\" : \"/teste/pessoa/:id\"}\"",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Find serviços by url"
        },
        {
          "_type": "request",
          "_id": "req_1482253685763",
          "url": "http://localhost:2301/catalog/1",
          "method": "PUT",
          "body": "{\n\t\"name\" : \"/teste/pessoa4/:id\",\n\t\"comment\": \"Pessoa\",\n\t\"owner\": \"teste\",\n\t\"version\": \"1.0.0\",\n\t\"service\" : \"br.unb.unb_aula.facade.PessoaFacade:findById\",\n\t\"url\": \"/teste/pessoa6/:id\",\n\t\"type\": \"GET\",\n\t\"lang\" : \"java\",\n    \"debug\" : false,\n    \"authentication\" : \"basic\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar um serviço"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1482237867917",
      "name": "catalog schema",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1482237867917",
          "url": "http://localhost:2301/catalog/schema",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar json schemas"
        },
        {
          "_type": "request",
          "_id": "req_1482238114683",
          "url": "http://localhost:2301/catalog/schema",
          "method": "POST",
          "body": "{\n\t\"name\": \"user\",\n\t\"description\": \"user schema.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"user schema\",\n\t\t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"description\": \"user id\"\n\t\t\t},\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 1\n\t\t\t},\n\t\t\t\"email\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 6,\n\t\t\t\t\"pattern\" : \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\"\n\t\t\t},\n\t\t\t\"password\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 30,\n\t\t\t\t\"minLength\": 4\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"email\", \"password\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Incluir json schema"
        },
        {
          "_type": "request",
          "_id": "req_1482238497832",
          "url": "http://localhost:2301/catalog/schema/1",
          "method": "DELETE",
          "body": "",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Excluir json schema"
        },
        {
          "_type": "request",
          "_id": "req_1482247335672",
          "url": "http://localhost:2301/catalog/schema/3",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar json schemas por id"
        },
        {
          "_type": "request",
          "_id": "req_1482247413585",
          "url": "http://localhost:2301/catalog/schema/2",
          "method": "PUT",
          "body": "{\n\t\"name\": \"user\",\n\t\"description\": \"user schema for autenticate.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"user schema\",\n\t\t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"description\": \"user id\"\n\t\t\t},\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 1\n\t\t\t},\n\t\t\t\"email\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 6,\n\t\t\t\t\"pattern\" : \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\"\n\t\t\t},\n\t\t\t\"password\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 30,\n\t\t\t\t\"minLength\": 4\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"email\", \"password\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar json schema"
        },
        {
          "_type": "request",
          "_id": "req_1482247814795",
          "url": "http://localhost:2301/catalog/schema",
          "method": "POST",
          "body": "{\n\t\"name\": \"service\",\n\t\"description\": \"service schema.\",\n\t\"json_schema\": {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"type\": \"object\",\n      \"title\": \"This scheme describes the API format for ErlangMS\",\n      \"description\": \"The purpose of this is to enable eschema describe a service API with the desired attributes that are compatible with ErlangMS. Moreover, the schema may be used to validate the API developed and ensure that the format is in accordance with the rules of syntax expected.\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"title\": \"The service name.\",\n          \"description\": \"The service name is used to identify the appropriate service.\"\n        },\n        \"comment\": {\n          \"type\": \"string\",\n          \"title\": \"The service comment.\",\n          \"description\": \"Enter a brief description of the service offered.\",\n          \"default\": \"\"\n        },\n        \"owner\": {\n          \"type\": \"string\",\n          \"title\": \"The owner service.\",\n          \"description\": \"Tell the owner or responsible for the service.\",\n          \"default\": \"\"\n        },\n        \"version\": {\n          \"type\": \"string\",\n          \"title\": \"Version schema.\",\n          \"pattern\": \"^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$\"\n        },\n        \"service\": {\n          \"type\": \"string\",\n          \"title\": \"Service schema.\",\n          \"description\": \"The class or module that implements the service. The format is: [module name]: [name of the input function]\",\n          \"pattern\": \"^[a-zA-Z][a-zA-Z0-9_.]*[:.][a-z_][a-zA-Z0-9_]*$\",\n          \"default\": \"\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"title\": \"Url of service.\",\n          \"description\": \"Url of service.\",\n          \"default\": \"\",\n          \"pattern\": \"^(/[^/]+)+$\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"title\": \"Type of service.\",\n          \"description\": \"Type of service according to the HTTP verbs.\",\n          \"pattern\": \"^(GET|POST|PUT|DELETE)$\"\n        },\n        \"public\": {\n          \"type\": \"boolean\",\n          \"title\": \"Service is public.\",\n          \"description\": \"Services that are not public services do not appear in the portal.\",\n          \"default\": true\n        },\n        \"async\": {\n          \"type\": \"boolean\",\n          \"title\": \"The service is asynchronous.\",\n          \"description\": \"The service is asynchronous.\",\n          \"default\": false\n        },\n        \"datasource\": {\n          \"type\": \"object\",\n          \"title\": \"Datasource of service if necessary.\",\n          \"description\": \"Datasource of service if necessary: odbc or csvfile\",\n          \"properties\": {\n            \"connection\": {\n              \"type\": \"string\",\n              \"title\": \"Connection string of odbc datasource.\",\n              \"description\": \"Connection string of odbc datasource.\",\n              \"default\": \"\",\n              \"pattern\": \"^(((DSN|UID|PWD)=[a-zA-Z0-9]{1,30});)+$\"\n            },\n            \"csvfile\": {\n              \"type\": \"string\",\n              \"title\": \"Name of csv file.\",\n              \"description\": \"Name of csv file.\",\n              \"default\": \"\",\n              \"pattern\": \"^[a-zA-Z][a-zA-Z0-9_]*.[Cc][Ss][Cv]$\"\n            },\n            \"table_name\": {\n              \"type\": \"string\",\n              \"title\": \"Table_name of datasource.\",\n              \"description\": \"Table_name of datasource.\",\n              \"default\": \"\",\n              \"pattern\": \"^[a-zA-Z_][a-zA-Z0-9_]{1,30}$\"\n            },\n            \"primary_key\": {\n              \"type\": \"string\",\n              \"title\": \"Primary key of datasource.\",\n              \"description\": \"Primary key of datasource.\",\n              \"default\": \"\",\n              \"pattern\": \"^[a-zA-Z_][a-zA-Z0-9_]{1,30}$\"\n            }\n          },\n          \"oneOf\": [\n            {\n              \"required\": [\n                \"connection\",\n                \"table_name\",\n                \"primary_key\"\n              ]\n            },\n            {\n              \"required\": [\n                \"csvfile\",\n                \"table_name\",\n                \"primary_key\"\n              ]\n            }\n          ]\n        },\n        \"lang\": {\n          \"type\": \"string\",\n          \"title\": \"Lang service implementation.\",\n          \"description\": \"What will be the implementation language service.\",\n          \"default\": \"\",\n          \"pattern\": \"^(erlang|java|net)$\"\n        },\n        \"debug\": {\n          \"type\": \"boolean\",\n          \"title\": \"Debug service flag.\",\n          \"description\": \"Enables debug mode for service.\",\n          \"default\": false\n        },\n        \"authentication\": {\n          \"type\": \"string\",\n          \"title\": \"Authentication method.\",\n          \"description\": \"Authentication method used if necessary.\",\n          \"default\": \"\",\n          \"pattern\": \"^(|basic|oauth)$\"\n        },\n        \"querystring\": {\n          \"type\": \"object\",\n          \"title\": \"Querystring of service.\",\n          \"description\": \"Querystring of service.\",\n          \"properties\": {\n            \"filter\": {\n              \"type\": \"string\",\n              \"title\": \"Filter query.\",\n              \"description\": \"Enter the json filter to query the objects.\",\n              \"default\": \"\",\n              \"format\": \"json\"\n            },\n            \"fields\": {\n              \"type\": \"string\",\n              \"title\": \"Fields of querystring.\",\n              \"description\": \"Fields that will be returned instead of the entire object.\",\n              \"default\": \"\",\n              \"pattern\": \"^([a-zA-Z][a-zA-Z0-9_]{1,29})((, *)|(,?$))\"\n            },\n            \"limit_ini\": {\n              \"type\": \"integer\",\n              \"title\": \"Initial pager to query data.\",\n              \"description\": \"Initial pager to query data.\",\n              \"minimum\": 1,\n              \"maximum\": 9999,\n              \"default\": 1,\n              \"required\": [\n                \"minimum\",\n                \"maximum\"\n              ]\n            },\n            \"limit_offset\": {\n              \"type\": \"integer\",\n              \"title\": \"Pager offset to query data.\",\n              \"description\": \"Pager offset to query data.\",\n              \"minimum\": 1,\n              \"maximum\": 9999,\n              \"default\": 100,\n              \"required\": [\n                \"minimum\",\n                \"maximum\"\n              ]\n            },\n            \"sort\": {\n              \"type\": \"string\",\n              \"title\": \"Sort objects by their fields.\",\n              \"description\": \"You can sort the objects by their fields.\",\n              \"pattern\": \"^([a-zA-Z][a-zA-Z0-9_]{1,29}) (asc|desc)((, *)|(,?$))\"\n            }\n          },\n          \"required\": []\n        }\n      },\n      \"oneOf\": [\n        {\n          \"required\": [\n            \"name\",\n            \"service\",\n            \"url\",\n            \"type\",\n            \"lang\"\n          ]\n        }\n      ]\n    }\n\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Incluir json schema do serviço"
        },
        {
          "_type": "request",
          "_id": "req_1482248243183",
          "url": "http://localhost:2301/catalog/schema/3",
          "method": "PUT",
          "body": "{\n\t\"name\": \"service\",\n\t\"description\": \"service schema.\",\n\t\"json_schema\": {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"type\": \"object\",\n      \"title\": \"This scheme describes the API format for ErlangMS\",\n      \"description\": \"The purpose of this is to enable eschema describe a service API with the desired attributes that are compatible with ErlangMS. Moreover, the schema may be used to validate the API developed and ensure that the format is in accordance with the rules of syntax expected.\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"title\": \"The service name.\",\n          \"description\": \"The service name is used to identify the appropriate service.\"\n        },\n        \"comment\": {\n          \"type\": \"string\",\n          \"title\": \"The service comment.\",\n          \"description\": \"Enter a brief description of the service offered.\",\n          \"default\": \"\"\n        },\n        \"owner\": {\n          \"type\": \"string\",\n          \"title\": \"The owner service.\",\n          \"description\": \"Tell the owner or responsible for the service.\",\n          \"default\": \"\"\n        },\n        \"version\": {\n          \"type\": \"string\",\n          \"title\": \"Version schema.\",\n          \"pattern\": \"^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$\"\n        },\n        \"service\": {\n          \"type\": \"string\",\n          \"title\": \"Service schema.\",\n          \"description\": \"The class or module that implements the service. The format is: [module name]: [name of the input function]\",\n          \"pattern\": \"^[a-zA-Z][a-zA-Z0-9_.]*[:.][a-z_][a-zA-Z0-9_]*$\",\n          \"default\": \"\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"title\": \"Url of service.\",\n          \"description\": \"Url of service.\",\n          \"default\": \"\",\n          \"pattern\": \"^(/[^/]+)+$\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"title\": \"Type of service.\",\n          \"description\": \"Type of service according to the HTTP verbs.\",\n          \"pattern\": \"^(GET|POST|PUT|DELETE)$\"\n        },\n        \"public\": {\n          \"type\": \"boolean\",\n          \"title\": \"Service is public.\",\n          \"description\": \"Services that are not public services do not appear in the portal.\",\n          \"default\": true\n        },\n        \"async\": {\n          \"type\": \"boolean\",\n          \"title\": \"The service is asynchronous.\",\n          \"description\": \"The service is asynchronous.\",\n          \"default\": false\n        },\n        \"lang\": {\n          \"type\": \"string\",\n          \"title\": \"Lang service implementation.\",\n          \"description\": \"What will be the implementation language service.\",\n          \"default\": \"\",\n          \"pattern\": \"^(erlang|java|net)$\"\n        },\n        \"debug\": {\n          \"type\": \"boolean\",\n          \"title\": \"Debug service flag.\",\n          \"description\": \"Enables debug mode for service.\",\n          \"default\": false\n        },\n        \"authentication\": {\n          \"type\": \"string\",\n          \"title\": \"Authentication method.\",\n          \"description\": \"Authentication method used if necessary.\",\n          \"default\": \"\",\n          \"pattern\": \"^(|basic|oauth)$\"\n        }\n      }  \n    }\n\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar json schema do serviço"
        },
        {
          "_type": "request",
          "_id": "req_1483630545448",
          "url": "http://localhost:2301/catalog/schema",
          "method": "POST",
          "body": "{\n\t\"name\": \"user\",\n\t\"description\": \"user schema.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"user schema\",\n\t\t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"description\": \"user id\"\n\t\t\t},\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 1\n\t\t\t},\n\t\t\t\"email\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 6,\n\t\t\t\t\"pattern\" : \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\"\n\t\t\t},\n\t\t\t\"password\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 30,\n\t\t\t\t\"minLength\": 4\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"email\", \"password\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Incluir user json schema"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1482337539226",
      "name": "service owner",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1482337539227",
          "url": "http://localhost:2301/catalog/owner",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Lista os owners do catálogo"
        },
        {
          "_type": "request",
          "_id": "req_1482342138118",
          "url": "http://localhost:2301/catalog/schema",
          "method": "POST",
          "body": "{\n\t\"name\": \"service_owner\",\n\t\"description\": \"service_owner schema.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"service owner schema\",\n\t\t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"description\": \"owner id\"\n\t\t\t},\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 8,\n\t\t\t\t\"minLength\": 3\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100\n\t\t\t},\n\t\t\t\"comment\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 1000\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"title\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Incluir json schema owner"
        },
        {
          "_type": "request",
          "_id": "req_1482342520912",
          "url": "http://localhost:2301/catalog/schema/3",
          "method": "PUT",
          "body": "{\n\t\"name\": \"service_owner\",\n\t\"description\": \"service_owner schema.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"service owner schema\",\n\t\t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"description\": \"owner id\"\n\t\t\t},\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 30,\n\t\t\t\t\"minLength\": 3\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100\n\t\t\t},\n\t\t\t\"comment\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 1000\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"title\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar json schema owner"
        },
        {
          "_type": "request",
          "_id": "req_1482343110148",
          "url": "http://localhost:2301/catalog/owner",
          "method": "POST",
          "body": "{\"name\" : \"simar\", \n \"title\" : \"Sistema de materiais\", \n \"comment\" : \"simar...\"\n    \n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Incluir owner"
        },
        {
          "_type": "request",
          "_id": "req_1482342387863",
          "url": "http://localhost:2301/catalog/owner/1",
          "method": "PUT",
          "body": "{\"name\" : \"ems-bus\", \n \"title\" : \"Barramento de serviços\", \n \"comment\" : \"Web-services do barramento ems-bus\"\n    \n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar owner"
        },
        {
          "_type": "request",
          "_id": "req_1482343054651",
          "url": "http://localhost:2301/catalog/owner/6",
          "method": "DELETE",
          "body": "{\"name\" : \"ems-bus\", \n \"title\" : \"Barramento de serviços\", \n \"comment\" : \"Web-services do barramento ems-bus\"\n    \n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Remover owner"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1483624616455",
      "name": "Hackathon",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1483624616456",
          "url": "http://127.0.0.1:2301/hackathon/cursos",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os cursos"
        },
        {
          "_type": "request",
          "_id": "req_1483624672211",
          "url": "http://localhost:2301/hackathon/cursos?filter={\"nome_professor__contains\" : \"Bordim\" } ",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os cursos do professor Bordim"
        },
        {
          "_type": "request",
          "_id": "req_1483624811815",
          "url": "http://localhost:2301/hackathon/cursos?fields=\"reg, nome_professor\"&filter={\"semestre\" : \"20122\" }&sort=nome_professor",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar o nome dos professores do 2 semestre de 2016"
        },
        {
          "_type": "request",
          "_id": "req_1483625015387",
          "url": "http://localhost:2301/hackathon/pessoa?fields=PesNome&limit=2",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Pesquisar pessoa por nome"
        },
        {
          "_type": "request",
          "_id": "req_1483625082000",
          "url": "http://localhost:2301/hackathon/mencao?filter=\"{ \"MenDenominacao\" : \"Médio\" }\"",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Lista a tabela de menções"
        },
        {
          "_type": "request",
          "_id": "req_1483625251556",
          "url": "http://localhost:2301/hackathon/certificado",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Lista os certificados SIEX"
        },
        {
          "_type": "request",
          "_id": "req_1483625372890",
          "url": "http://localhost:2301/hackathon/ofertas",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Lista as ofertas de cursos na UnB"
        },
        {
          "_type": "request",
          "_id": "req_1483625453172",
          "url": "http://localhost:2301/hackathon/campus",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Lista os campus da UnB"
        },
        {
          "_type": "request",
          "_id": "req_1483626278563",
          "url": "http://localhost:2301/hackathon/local",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os locais da UnB"
        },
        {
          "_type": "request",
          "_id": "req_1483626315019",
          "url": "http://localhost:2301/hackathon/local/27",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Pesquisar local por id"
        },
        {
          "_type": "request",
          "_id": "req_1483626342083",
          "url": "http://localhost:2301/hackathon/area_tematica",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar as áreas temáticas da UnB"
        },
        {
          "_type": "request",
          "_id": "req_1483626495058",
          "url": "http://localhost:2301/hackathon/forma_ingresso?sort=MenPontos",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar as formas de ingresso da UnB"
        },
        {
          "_type": "request",
          "_id": "req_1483626375946",
          "url": "http://localhost:2301/hackathon/forma_ingresso?filter=\"{ \"MenPontos__gte\" : 3 }\"&sort=menpontos",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar as formas de ingresso da UnB com pontuação maior ou igual a 3"
        },
        {
          "_type": "request",
          "_id": "req_1483626579797",
          "url": "http://localhost:2301/hackathon/forma_ingresso?filter=\"{ \"MenPontos__gte\" : 3, \"MenExtinto__isnull\" : false }\"&sort=menpontos",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar as formas de ingresso ativas da UnB com pontuação maior ou igual a 3"
        },
        {
          "_type": "request",
          "_id": "req_1483626646414",
          "url": "http://localhost:2301/hackathon/centro_custo",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os centros de custo da UnB"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1483628313560",
      "name": "Samples - Produto",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1483628566476",
          "url": "http://localhost:2301/catalog/schema",
          "method": "POST",
          "body": "{\n\t\"name\": \"produto\",\n\t\"description\": \"schema para produto.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"schema para produto\",\n\t\t\"properties\": {\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"description\": \"preço do produto\"\n\t\t\t},\n\t\t\t\"price\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"minimum\": 1,\n\t\t\t\t\"maximum\": 9999,\n\t\t\t\t\"default\": 100\n\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"price\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar schema do produto"
        },
        {
          "_type": "request",
          "_id": "req_1483628313561",
          "url": "http://localhost:2301/samples/produto",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "johndoe",
            "password": "A3ddj3w"
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os produtos cadastrados"
        },
        {
          "_type": "request",
          "_id": "req_1483628504352",
          "url": "http://localhost:2301/samples/produto",
          "method": "POST",
          "body": "{ }",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar um novo produto sem atributos"
        },
        {
          "_type": "request",
          "_id": "req_1483628739017",
          "url": "http://localhost:2301/samples/produto",
          "method": "POST",
          "body": "{ \n    \"name\" : \"Refri Coca Cola 2L\",\n    \"price\" : 6\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar Refrigerante Cola Cola"
        },
        {
          "_type": "request",
          "_id": "req_1483629231535",
          "url": "http://localhost:2301/samples/produto/1",
          "method": "PUT",
          "body": "{ \n    \"name\" : \"Refri Coca Cola 2L\",\n    \"price\" : 6.89\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar Refrigerante Cola Cola"
        },
        {
          "_type": "request",
          "_id": "req_1483628839749",
          "url": "http://localhost:2301/catalog/schema/1",
          "method": "DELETE",
          "body": "{\n\t\"name\": \"produto\",\n\t\"description\": \"schema para produto.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"schema para produto\",\n\t\t\"properties\": {\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"description\": \"preço do produto\"\n\t\t\t},\n\t\t\t\"price\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"minimum\": 1,\n\t\t\t\t\"maximum\": 9999,\n\t\t\t\t\"default\": 100\n\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"price\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Remover schema do produto"
        },
        {
          "_type": "request",
          "_id": "req_1483628867127",
          "url": "http://localhost:2301/catalog/schema?filter=\"{ \"name\" : \"produto\" }\"",
          "method": "GET",
          "body": "{\n\t\"name\": \"produto\",\n\t\"description\": \"schema para produto.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"schema para produto\",\n\t\t\"properties\": {\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"description\": \"preço do produto\"\n\t\t\t},\n\t\t\t\"price\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"minimum\": 1,\n\t\t\t\t\"maximum\": 9999,\n\t\t\t\t\"default\": 100\n\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"price\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Pesquisar schema do produto"
        },
        {
          "_type": "request",
          "_id": "req_1483629019166",
          "url": "http://localhost:2301/catalog/schema/4",
          "method": "PUT",
          "body": "{\n\t\"name\": \"produto\",\n\t\"description\": \"schema para produto.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"schema para produto\",\n\t\t\"properties\": {\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"description\": \"preço do produto\"\n\t\t\t},\n\t\t\t\"price\": {\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"minimum\" : 0.01,\n\t\t\t\t\"maximum\" : 99999.00\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"price\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar schema do produto"
        },
        {
          "_type": "request",
          "_id": "req_1483629377825",
          "url": "http://localhost:2301/samples/produto",
          "method": "POST",
          "body": "{ \n    \"name\" : \"Smartphone Xperia Z2\",\n    \"price\" : 3500\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar Smartphone"
        },
        {
          "_type": "request",
          "_id": "req_1483629473194",
          "url": "http://localhost:2301/samples/produto/2",
          "method": "PUT",
          "body": "{ \n    \"name\" : \"Smartphone Xperia Z2\",\n    \"price\" : 3500\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar Smartphone"
        },
        {
          "_type": "request",
          "_id": "req_1483629729240",
          "url": "http://localhost:2301/samples/produto?filter=\"{ \"price__gte\" : 100 }\"",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os produtos que custam mais que 100 reais"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1483539934645",
      "name": "OAuth2",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1483543191870",
          "url": "http://servicosssi.unb.br:2301/authorize?grant_type=password&username=geral&password=123456",
          "method": "POST",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Autenticar usuário"
        },
        {
          "_type": "request",
          "_id": "req_1483545035080",
          "url": "http://127.0.0.1:2301/authorize?grant_type=client_credentials&client_id=s6BhdRkqt3&secret=qwer",
          "method": "POST",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Autenticar cliente"
        },
        {
          "_type": "request",
          "_id": "req_1483545514009",
          "url": "http://127.0.0.1:2301/authorize?response_type=code&client_id=s6BhdRkqt3&state=xyz%20&redirect_uri=http://localhost:2301/portal/index.html",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Autenticar por código"
        },
        {
          "_type": "request",
          "_id": "req_1483547722244",
          "url": "http://127.0.0.1:2301/authorize?response_type=code2&client_id=s6BhdRkqt3&state=xyz%20&redirect_uri=http://localhost:2301/portal/index.html&username=geral&password=123456",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Autorizar o usuário tela login"
        },
        {
          "_type": "request",
          "_id": "req_1483549231784",
          "url": "http://127.0.0.1:2301/authorize?grant_type=authorization_code&client_id=s6BhdRkqt3&state=xyz%20&redirect_uri=http://localhost:2301/portal/index.html&username=johndoe&password=A3ddj3w&secret=qwer&code=DMyeYa4qpITyQsZxIf8VZ7GWaRWlycrp",
          "method": "POST",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Após autorização, receber o token"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1483629996242",
      "name": "Auth user",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1483629996243",
          "url": "http://localhost:2301/auth/user",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os usuários"
        },
        {
          "_type": "request",
          "_id": "req_1483630281141",
          "url": "http://localhost:2301/auth/user",
          "method": "POST",
          "body": "{\n    \"name\" : \"Felipe dos Santos\",\n    \"email\" : \"felipe@gmail.com\",\n    \"password\" : \"123456\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Incluir Everton de Vargas Agilar"
        },
        {
          "_type": "request",
          "_id": "req_1483630583792",
          "url": "http://localhost:2301/catalog/schema",
          "method": "POST",
          "body": "{\n\t\"name\": \"user\",\n\t\"description\": \"user schema.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"user schema\",\n\t\t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"description\": \"user id\"\n\t\t\t},\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 1\n\t\t\t},\n\t\t\t\"email\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 6,\n\t\t\t\t\"pattern\" : \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\"\n\t\t\t},\n\t\t\t\"password\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 30,\n\t\t\t\t\"minLength\": 4\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"email\", \"password\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Incluir user json schema"
        },
        {
          "_type": "request",
          "_id": "req_1483630630086",
          "url": "http://localhost:2301/catalog/schema?filter=\"{ \"name\" : \"user\"  }\"",
          "method": "GET",
          "body": "{\n\t\"name\": \"user\",\n\t\"description\": \"user schema.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"user schema\",\n\t\t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"description\": \"user id\"\n\t\t\t},\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 1\n\t\t\t},\n\t\t\t\"email\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 6,\n\t\t\t\t\"pattern\" : \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\"\n\t\t\t},\n\t\t\t\"password\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 30,\n\t\t\t\t\"minLength\": 4\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"email\", \"password\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Pesquisar user json schema"
        },
        {
          "_type": "request",
          "_id": "req_1483630732055",
          "url": "http://localhost:2301/catalog/schema/3",
          "method": "PUT",
          "body": "{\n\t\"name\": \"user\",\n\t\"description\": \"user schema.\",\n\t\"json_schema\": {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"title\": \"user schema\",\n\t\t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\"description\": \"user id\"\n\t\t\t},\n\t\t\t\"name\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 1\n\t\t\t},\n\t\t\t\"email\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 100,\n\t\t\t\t\"minLength\": 6,\n\t\t\t\t\"pattern\" : \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\"\n\t\t\t},\n\t\t\t\"password\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"maxLength\": 30,\n\t\t\t\t\"minLength\": 4\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"name\", \"email\", \"password\"\n\t\t]\n\t}\n}\n",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar user json schema"
        },
        {
          "_type": "request",
          "_id": "req_1483631082322",
          "url": "http://localhost:2301/auth/user",
          "method": "POST",
          "body": "{\n    \"name\" : \"johndoe\",\n    \"email\" : \"johndoe@gmail.com\",\n    \"password\" : \"A3ddj3w\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Incluir johndoe"
        },
        {
          "_type": "request",
          "_id": "req_1483964976558",
          "url": "http://localhost:2301/auth/user?filter=\"{ \"login\" : \"geral\"  }\"",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Pesquisa geral"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1483708649549",
      "name": "SAE",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1483708649549",
          "url": "http://localhost:2301/sitab/campus",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Lista os campus da UnB"
        },
        {
          "_type": "request",
          "_id": "req_1483708701916",
          "url": "http://localhost:2301/sigra/aluno",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os alunos do SIGRA"
        },
        {
          "_type": "request",
          "_id": "req_1483708718009",
          "url": "http://localhost:2301/sigra/aluno",
          "method": "POST",
          "body": "{\n    \"nome\":\"EVERTON DE VARGAS AGILAR\",\n    \"cpf\": \"00167743023\",\n    \"senha\" : \"123456\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar aluno no SIGRA"
        },
        {
          "_type": "request",
          "_id": "req_1483708825452",
          "url": "http://localhost:2301/sigra/aluno/350",
          "method": "PUT",
          "body": "{\n    \"nome\":\"EVERTON DE VARGAS AGILAR\",\n    \"cpf\": \"00167743023\",\n    \"senha\" : \"123456\",\n    \"bloqueado\" : true\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Alterar aluno no SIGRA"
        },
        {
          "_type": "request",
          "_id": "req_1483708877492",
          "url": "http://localhost:2301/sigra/aluno/344",
          "method": "DELETE",
          "body": "{\n    \"nome\":\"EVERTON DE VARGAS AGILAR\",\n    \"cpf\": \"00167743023\",\n    \"senha\" : \"123456\",\n    \"bloqueado\" : true\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Excluir aluno no SIGRA"
        },
        {
          "_type": "request",
          "_id": "req_1483708945712",
          "url": "http://localhost:2301/sigra/aluno?filter=\"{ \"bloqueado\" : true }\"&fields=nome",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os alunos bloqueados no SIGRA"
        },
        {
          "_type": "request",
          "_id": "req_1483709081716",
          "url": "http://localhost:2301/questionario/pergunta",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listas as perguntas para os questionários disponíveis"
        },
        {
          "_type": "request",
          "_id": "req_1483709200431",
          "url": "http://localhost:2301/questionario/categoria_pergunta",
          "method": "POST",
          "body": "{\n    \"denominacao\" : \"Dados Familiares\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar categoria para pergunta"
        },
        {
          "_type": "request",
          "_id": "req_1483709297327",
          "url": "http://localhost:2301/questionario/categoria_pergunta",
          "method": "GET",
          "body": "{\n    \"denominacao\" : \"Dados Familiares\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar as categorias de pergunta disponíveis"
        },
        {
          "_type": "request",
          "_id": "req_1483709119903",
          "url": "http://localhost:2301/questionario/pergunta",
          "method": "POST",
          "body": "{\n    \"enunciado\":\"Voce tem moradia própria?\", \n    \"tipoResposta\": 2, \n\t\"categoria\": 351\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar pergunta"
        },
        {
          "_type": "request",
          "_id": "req_1483709395209",
          "url": "http://localhost:2301/questionario/categoria_pergunta/351",
          "method": "DELETE",
          "body": "{\n    \"denominacao\" : \"Dados Familiares\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Excluir categoria de pergunta"
        },
        {
          "_type": "request",
          "_id": "req_1483709584401",
          "url": "http://localhost:2301/questionario/questionario?filtro=\"{ \"dataInicio\" : \"30/03/1983\"  }\"&sort=dataInicio,dataFim",
          "method": "GET",
          "body": "{\n    \"denominacao\" : \"Dados Familiares\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar os questionários de 1983"
        },
        {
          "_type": "request",
          "_id": "req_1483709736013",
          "url": "http://localhost:2301/questionario/questionario",
          "method": "POST",
          "body": "{\n    \"dataInicio\" : \"01/02/2017\",\n    \"dataFim\" : \"15/02/2017\",\n    \"denominacao\" : \"Questionário da modernização de software\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Criar um questionário modernização"
        },
        {
          "_type": "request",
          "_id": "req_1483709893623",
          "url": "http://localhost:2301/questionario/questionario?filtro=\"{ \"denominacao\" : \"Questionário da modernização de software\" }\"",
          "method": "GET",
          "body": "{\n    \"dataInicio\" : \"01/02/2017\",\n    \"dataFim\" : \"15/02/2017\",\n    \"denominacao\" : \"Questionário da modernização de software\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar o questionário modernização"
        },
        {
          "_type": "request",
          "_id": "req_1483709866916",
          "url": "http://localhost:2301/questionario/questionario/355/pergunta",
          "method": "POST",
          "body": "{\n    \"pergunta\"  : 353\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Vincular pergunta ao questinário modernização"
        },
        {
          "_type": "request",
          "_id": "req_1483710191711",
          "url": "http://localhost:2301/sae/valoralimentacao",
          "method": "GET",
          "body": "{\n    \"pergunta\"  : 353\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Consulta a lista de valor alimentação"
        },
        {
          "_type": "request",
          "_id": "req_1483710216991",
          "url": "http://localhost:2301/sae/valoralimentacao",
          "method": "POST",
          "body": "{\n        \"campus\":1,\n\t\t\"inicioVigencia\" : \"01/10/2015\",\n\t\t\"fimVigencia\" : \"10/10/2015\",\n\t\t\"pagaBeneficio\" : true,\n\t\t\"valorBeneficio\" : 12.978\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar valor alimentação"
        },
        {
          "_type": "request",
          "_id": "req_1483710553828",
          "url": "http://localhost:2301/sae/valoralimentacao?filtro=\"{ \"valor_gte\" : 10 }\"",
          "method": "GET",
          "body": "{\n        \"campus\":1,\n\t\t\"inicioVigencia\" : \"01/10/2015\",\n\t\t\"fimVigencia\" : \"10/10/2015\",\n\t\t\"pagaBeneficio\" : true,\n\t\t\"valorBeneficio\" : 12.978\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Lista valor alimentação com preço maior que 10 reais"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1484245845412",
      "name": "unb_servicos - academico",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1484245845413",
          "url": "http://localhost:2301/academico/curso",
          "method": "POST",
          "body": "{\n    \"denominacao\" :  \"Curso de Java Avançado\",\n    \"dataInicio\" : \"30/02/2017\",\n    \"dataFim\" : \"20/03/2017\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar curso"
        },
        {
          "_type": "request",
          "_id": "req_1484246017238",
          "url": "http://localhost:2301/academico/curso",
          "method": "GET",
          "body": "{\n    \"denominacao\" :  \"Curso de Java Avançado\",\n    \"dataInicio\" : \"30/02/2017\",\n    \"dataFim\" : \"20/03/2017\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar cursos"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1484246044518",
      "name": "unb_servicos - administrativo",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1484246044519",
          "url": "http://localhost:2301/administrativo/recurso",
          "method": "POST",
          "body": "{\n    \"denominacao\" :  \"Recurso 12\",\n    \"dataInicio\" : \"30/02/2017\",\n    \"dataFim\" : \"20/03/2017\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar recurso"
        },
        {
          "_type": "request",
          "_id": "req_1484246418660",
          "url": "http://localhost:2301/administrativo/recurso",
          "method": "GET",
          "body": "{\n    \"denominacao\" :  \"Recurso 12Curso de Java Avançado\",\n    \"dataInicio\" : \"30/02/2017\",\n    \"dataFim\" : \"20/03/2017\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar recursos"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1484246453409",
      "name": "unb_servicos - pessoal",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1484246453410",
          "url": "http://localhost:2301/pessoal/pessoa",
          "method": "POST",
          "body": "{\n    \"denominacao\" :  \"Everton de Vargas Agilar\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Cadastrar pessoa"
        },
        {
          "_type": "request",
          "_id": "req_1484246571713",
          "url": "http://localhost:2301/pessoal/pessoa?filter=\"{ \"nome__contains\" : \"agilar\"  }\"&limit=2&offset=1",
          "method": "GET",
          "body": "{\n    \"denominacao\" :  \"Everton de Vargas Agilar\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar pessoas"
        },
        {
          "_type": "request",
          "_id": "req_1484246592289",
          "url": "http://localhost:2301/pessoal/pessoa?filter=\"{ \"ativo\" : \"true\"  }\"",
          "method": "GET",
          "body": "{\n    \"denominacao\" :  \"Everton de Vargas Agilar\"\n}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar somente pessoas ativas"
        }
      ]
    },
    {
      "_type": "request_group",
      "_id": "grp_1484655450120",
      "name": "agenda",
      "environments": {},
      "requests": [
        {
          "_type": "request",
          "_id": "req_1484655450120",
          "url": "http://localhost:2301/agenda/telefone",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar agenda telefone"
        },
        {
          "_type": "request",
          "_id": "req_1484656648906",
          "url": "http://localhost:2301/agenda/telefone?filter=\"{ \"nome\"  :  \"Airton Ferreira da Silva Júnior\" }\"",
          "method": "GET",
          "body": "{}",
          "headers": [],
          "params": [],
          "authentication": {
            "_type": "basic",
            "username": "",
            "password": ""
          },
          "__insomnia": {
            "format": "json",
            "panel_width": 0.5
          },
          "name": "Listar agenda telefone por nome"
        }
      ]
    }
  ]
}